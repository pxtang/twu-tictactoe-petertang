import org.junit.Before;
import org.junit.Test;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintStream;
import java.util.ArrayList;

import static org.hamcrest.MatcherAssert.assertThat;
import static org.mockito.Mockito.mock;
import static org.mockito.Mockito.verify;
import static org.mockito.Mockito.when;

/*
 * This Java source file was auto generated by running 'gradle init --type java-library'
 * by 'ptang' at '8/6/15 1:21 PM' with Gradle 2.5
 *
 * @author ptang, @date 8/6/15 1:21 PM
 */
public class TicTacToeTest {

    private PrintStream printStream;
    private TicTacToe ticTacToe;
    private ArrayList<String> moveGrid;
    private BufferedReader inputStream;
    private Player player1;
    private Player player2;

    @Before
    public void setUp() throws Exception {
        printStream = mock(PrintStream.class);
        inputStream = mock(BufferedReader.class);
        moveGrid = new ArrayList<>();
        ticTacToe = new TicTacToe(printStream, inputStream, moveGrid);
    }

    private void setUpMoveGridForTest() {
        for (int i = 0; i < 9; i++) {
            moveGrid.add(" ");
        }
    }

    private void setUpPlayer1() {
        player1 = new Player(moveGrid,printStream, inputStream, 1);
    }

    private void setUpPlayer2() {
        player2 = new Player(moveGrid,printStream, inputStream, 2);
    }

    @Test
    public void shouldDrawBoardWithXInSpot5IfPlayer1Inputs5() throws IOException {
        setUpMoveGridForTest();
        setUpPlayer1();
        when(inputStream.readLine()).thenReturn("5");
        ticTacToe.update(moveGrid, player1);

        verify(printStream).print(  "   |   |  \n" +
                                    "-----------\n" +
                                    "   | X |  \n" +
                                    "-----------\n" +
                                    "   |   |  \n");
    }

    @Test
    public void shouldDrawBoardWithXInSpot9IfPlayer1Inputs9() throws IOException {
        setUpMoveGridForTest();
        setUpPlayer1();

        when(inputStream.readLine()).thenReturn("9");
        ticTacToe.update(moveGrid, player1);

        verify(printStream).print(  "   |   |  \n" +
                                    "-----------\n" +
                                    "   |   |  \n" +
                                    "-----------\n" +
                                    "   |   | X\n");
    }

    @Test
    public void shouldDrawBoardWithOInSpot4IfPlayer2Inputs4() throws IOException {
        setUpMoveGridForTest();
        setUpPlayer2();
        when(inputStream.readLine()).thenReturn("4");
        ticTacToe.update(moveGrid, player2);

        verify(printStream).print(  "   |   |  \n" +
                "-----------\n" +
                " O |   |  \n" +
                "-----------\n" +
                "   |   |  \n");
    }

    @Test
    public void shouldSayGameIsDrawWhenGameBoardFull() throws IOException {
        setUpMoveGridForTest();
        when(inputStream.readLine()).thenReturn("1", "2", "3", "5", "4", "7", "6", "9", "8");
        ticTacToe.play();

        verify(printStream).println("Game is a draw");
    }

    @Test
    public void shouldPlayer1WinWhenThreeInARow() throws IOException {
        setUpMoveGridForTest();
        when(inputStream.readLine()).thenReturn("1", "4", "2", "5", "3");
        ticTacToe.play();

        verify(printStream).println("Player " + 1 + " Wins!");

    }

    @Test
    public void shouldPlayer2WinWhenThreeInACol() throws IOException {
        setUpMoveGridForTest();
        when(inputStream.readLine()).thenReturn("1", "2", "3", "5", "4","8");
        ticTacToe.play();

        verify(printStream).println("Player " + 2 + " Wins!");

    }

    @Test
    public void shouldPlayer1WinWhenThreeInASWDiag() throws IOException {
        setUpMoveGridForTest();
        when(inputStream.readLine()).thenReturn("1", "2", "5", "3", "9");
        ticTacToe.play();

        verify(printStream).println("Player " + 1 + " Wins!");
    }

    @Test
    public void shouldPlayer2WinWhenThreeInASEDiag() throws IOException {
        setUpMoveGridForTest();
        when(inputStream.readLine()).thenReturn("1", "3", "2", "5", "4","7");
        ticTacToe.play();

        verify(printStream).println("Player " + 2 + " Wins!");
    }
}
